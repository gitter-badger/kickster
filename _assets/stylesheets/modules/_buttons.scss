// =============================================================================
// Buttons
// =============================================================================

// Settings
// =============================================================================

// Scaffolding buttons with a given color.
// @param {Hex} $background Color for the button background.
// @param {Hex} $font Color for the button type.

@mixin button-generator($background, $font) {
  background: $background;
  border-color: $font;
  color: $font;

  &:hover {
    color: $font;
    background: rgba($font, .1);
    border-color: darken($font, 5);
  }

  &:active { border-color: darken($font, 10); }
  &:focus { outline: none; }
}

// Component
// =============================================================================

.button {
  position: relative;
  display: inline-block;
  padding: 10px 15px;
  font-family: $sans-serif;
  font-size: 13px;
  font-weight: 500;
  line-height: inherit;
  letter-spacing: .1em;
  text-align: center;
  text-transform: uppercase;
  cursor: pointer;
  border: 2px solid $gray;
  border-radius: $base-border-radius;
  transition: all $base-transition-speed ease-in-out;
  appearance: none;
  user-select: none;

  &:disabled,
  &.is-disabled {
    color: $base-font-color;
    cursor: not-allowed;
    background: transparent;

    &:hover,
    &:focus
    &:active {
      color: $base-font-color;
      background: transparent;
    }
  }
}

// Descendant
// =============================================================================

.button-default { @include button-generator(transparent, $white); }
.button-success { @include button-generator($brand-success, $white); }
.button-danger { @include button-generator($brand-danger, $white); }
.button-info { @include button-generator($brand-info, $white); }
.button-primary { @include button-generator(transparent, $brand-primary); }
